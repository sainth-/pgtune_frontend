{-
   pgtune
   A service to generate some optimized configuration parameters for PostgreSQL based on best practices.

   The version of the OpenAPI document: 1.0
   Contact: sainth@sainth.de

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git
   Do not edit this file manually.
-}


module Data.SystemConfiguration exposing (SystemConfiguration, decoder, encode)

import Data.DataStorage as DataStorage exposing (DataStorage)
import Data.DbApplication as DbApplication exposing (DbApplication)
import Data.Memory as Memory exposing (Memory)
import Data.OperatingSystem as OperatingSystem exposing (OperatingSystem)
import Data.PostgresVersion as PostgresVersion exposing (PostgresVersion)
import Dict exposing (Dict)
import Json.Decode as Decode exposing (Decoder)
import Json.Decode.Pipeline exposing (optional, required)
import Json.Encode as Encode


type alias SystemConfiguration =
    { dbVersion : PostgresVersion
    , osType : OperatingSystem
    , dbApplication : DbApplication
    , ram : Memory
    , cores : Maybe Int
    , connections : Maybe Int
    , dataStorage : DataStorage
    }


decoder : Decoder SystemConfiguration
decoder =
    Decode.succeed SystemConfiguration
        |> required "dbVersion" PostgresVersion.decoder
        |> required "osType" OperatingSystem.decoder
        |> required "dbApplication" DbApplication.decoder
        |> required "ram" Memory.decoder
        |> optional "cores" (Decode.nullable Decode.int) Nothing
        |> optional "connections" (Decode.nullable Decode.int) Nothing
        |> required "dataStorage" DataStorage.decoder


encode : SystemConfiguration -> Encode.Value
encode model =
    Encode.object
        [ ( "dbVersion", PostgresVersion.encode model.dbVersion )
        , ( "osType", OperatingSystem.encode model.osType )
        , ( "dbApplication", DbApplication.encode model.dbApplication )
        , ( "ram", Memory.encode model.ram )
        , ( "cores", Maybe.withDefault Encode.null (Maybe.map Encode.int model.cores) )
        , ( "connections", Maybe.withDefault Encode.null (Maybe.map Encode.int model.connections) )
        , ( "dataStorage", DataStorage.encode model.dataStorage )
        ]
